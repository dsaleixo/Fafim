package CFGBUS;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import CFG.B;
import CFG.If_B_then_S_else_S;
import CFG.S;

public class If_B_then_S_else_S_BUS extends If_B_then_S_else_S implements Grow {

	public If_B_then_S_else_S_BUS() {
		// TODO Auto-generated constructor stub
	}

	public If_B_then_S_else_S_BUS(B b, S then_S, S else_S) {
		super(b, then_S, else_S);
		// TODO Auto-generated constructor stub
	}

	@Override
	public void grow(Map<Integer, List<S>> plist, int Size, List<B> blist,List<S> newList) {
		// TODO Auto-generated method stub
		
		List<List<Integer>> combinations = createcombinations(Size);
	
		for (List<Integer> c : combinations) {
			List<S> program_set1 = plist.get(c.get(0));
           
			List<S> program_set2 = plist.get(c.get(1));
	
			
			
		
			for(B b : blist) {
				for(S s1 : program_set1) {
					for(S s2 : program_set2) {
						S aux = new S(new If_B_then_S_else_S(b,s1,s2));
						newList.add(aux);
					}
				}
			}
		
		}
	}

	public List<List<Integer>> createcombinations(int size) {
		// TODO Auto-generated method stub
	
			List<List<Integer>>  l = new ArrayList<>();
			for(int i =1;i<size;i++) {
				for(int j=1;j<size;j++) {
					List<Integer>  l2 = new ArrayList<>();
					l2.add(i);
					l2.add(j);
					
				}
			}
		
			return l;
		
		
	}

}
